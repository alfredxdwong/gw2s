buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.3'
    }
}

apply plugin: 'com.android.application'

dependencies {
    compile 'com.google.android.gms:play-services:7.3.0'

    compile 'com.readystatesoftware.sqliteasset:sqliteassethelper:+',
        'com.nostra13.universalimageloader:universal-image-loader:1.9.3',
        'com.jakewharton:butterknife:6.1.0',
        'com.fasterxml.jackson.core:jackson-core:2.5.2',
        'com.fasterxml.jackson.core:jackson-databind:2.5.2',
        'org.apache.commons:commons-lang3:3.4',
        'commons-collections:commons-collections:3.2.1',
        'commons-io:commons-io:2.4',
        'org.osmdroid:osmdroid-android:4.3',
        'org.slf4j:slf4j-android:1.7.12'
}

project.ext {
    signing_properties = "../signing.properties"
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        applicationId "info.mornlight.gw2s.android"
        minSdkVersion 14
        targetSdkVersion 21
        //versionCode 1
        //versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

	packagingOptions {
	  	exclude 'META-INF/LICENSE.txt'
	  	exclude 'META-INF/NOTICE.txt'
	  	exclude 'META-INF/LICENSE'
	  	exclude 'META-INF/DEPENDENCIES'
	  	exclude 'META-INF/NOTICE'

        exclude 'META-INF/services/javax.annotation.processing.Processor'
	}

	lintOptions {
        disable 'InvalidPackage'
	    abortOnError false
	}

    if (project.hasProperty("signing_properties")
        && file(signing_properties).exists()) {

    	println("Signing information is found, the release apk will be signed.")

        Properties props = new Properties()
        props.load(new FileInputStream(file(signing_properties)))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['key.alias']
                keyPassword props['key.password']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    } else {
    	println("Warning, signing information is not found, the release apk will be not signed.")
    }
}