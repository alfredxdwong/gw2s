apply plugin: 'android'

dependencies {
    compile 'com.google.android.gms:play-services:4.0.30',
        'com.android.support:support-v4:13.0.0'

    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar',
        'org.roboguice:roboguice:2.0',
        'com.github.rtyley:roboguice-sherlock:1.5',
        'com.fasterxml.jackson.core:jackson-core:2.2.1',
        'com.fasterxml.jackson.core:jackson-databind:2.2.1',
        'org.apache.commons:commons-lang3:3.1',
        'commons-collections:commons-collections:3.2.1',
        'commons-io:commons-io:2.4',
        project(':lib:SlidingMenu'),
        fileTree(dir: '../lib', include: '*.jar')
}

apply from: '../android.gradle'

project.ext {
    signing_properties = "../signing.properties"
}

android {
	packagingOptions {
	  	exclude 'META-INF/LICENSE.txt'
	  	exclude 'META-INF/NOTICE.txt'
	  	exclude 'META-INF/LICENSE'
	  	exclude 'META-INF/DEPENDENCIES'
	  	exclude 'META-INF/NOTICE'
	}

	lintOptions {
	    abortOnError false
	}

    if (project.hasProperty("signing_properties")
        && file(signing_properties).exists()) {

    	println("Signing information is found, the release apk will be signed.")

        Properties props = new Properties()
        props.load(new FileInputStream(file(signing_properties)))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['key.alias']
                keyPassword props['key.password']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    } else {
    	println("Warning, signing information is not found, the release apk will be not signed.")
    }
}